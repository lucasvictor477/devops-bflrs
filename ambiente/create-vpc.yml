---
- name: Criação de VPC, Subnet, Internet gateway, Route table, Security group
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  vars_files:
    - vars/global.yml
    - vars/vpc.yml
  environment:
    AWS_ACCESS_KEY_ID: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
    AWS_SECRET_ACCESS_KEY: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
    AWS_SESSION_TOKEN: "{{ lookup('env', 'AWS_SESSION_TOKEN') }}"

  tasks:
    - name: Criação de VPC
      ec2_vpc_net:
        region: "{{ aws_region }}"
        name: "{{ vpc_name }}"
        cidr_block: "{{ vpc_cidr_block }}"
        dns_support: true
        dns_hostnames: true
        tenancy: default
        tags:
          Name: "{{ vpc_name }}"
      register: vpc_result

    - name: Criação de subnet
      ec2_vpc_subnet:
        region: "{{ aws_region }}"
        az: "{{ aws_availability_zone }}"
        vpc_id: "{{ vpc_result.vpc.id }}"
        cidr: "{{ subnet_cidr_block }}"
        map_public: true
        tags:
          Name: "{{ subnet_name }}"
      register: subnet_result

    - name: Criação de internet gateway
      ec2_vpc_igw:
        region: "{{ aws_region }}"
        vpc_id: "{{ vpc_result.vpc.id }}"
        tags:
          Name: "{{ igw_name }}"
      register: igw_result

    - name: Criação de route table
      ec2_vpc_route_table:
        region: "{{ aws_region }}"
        vpc_id: "{{ vpc_result.vpc.id }}"
        subnets: ["{{ subnet_result.subnet.id }}"]
        tags:
          Name: "{{ route_table_name }}"
        routes:
          - dest: "{{ destination_cidr_block }}"
            gateway_id: "{{ igw_result.gateway_id }}"
      register: public_route_table

    - name: Criação de security group
      ec2_group:
        region: "{{ aws_region }}"
        vpc_id: "{{ vpc_result.vpc.id }}"
        name: "{{ security_group_name }}"
        description: "{{ security_group_name }}"
        tags:
          Name: "{{ security_group_name }}"
        rules:
          - proto: tcp
            ports:
              - 22
            cidr_ip: "{{ port22_cidr_block }}"
            rule_desc: allow all on port 22
          - proto: tcp
            ports:
              - 80
            cidr_ip: "{{ port80_cidr_block }}"
            rule_desc: allow all on port 80
      register: security_group_result

    - name: Registro do id da subrede
      add_host:
        name: "virtual_host"
        subnet_id: "{{ subnet_result.subnet.id }}"
